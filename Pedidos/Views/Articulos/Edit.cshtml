@model Pedidos.ViewModels.ArticulosEditVM

@{
    ViewBag.Title = "Edición de Artículos";
}

<br />
<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Editar_Paso2_RecibeEdicion", "Articulos", FormMethod.Post, new { @class = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ReturnURL);

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @for (var i = 0; i < Model.items.Count; i++)
        {
            @Html.HiddenFor(model => model.items[i].ArticuloId);
            @Html.HiddenFor(model => model.items[i].RowVersion);
            @Html.HiddenFor(model => model.items[i].TipoDeArticulo);

            <br />
            <h4>Ítem @(i + 1) (@Model.items[i].TipoDeArticulo)</h4>
            <hr />
            
            <div class="form-group">
                @Html.LabelFor(model => model.items[i].CodigoTango, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.items[i].CodigoTango, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.items[i].CodigoTango, "", new { @class = "text-danger" })
                </div>
            </div>
            
            if (Model.items[i].TipoDeArticulo == "Tapa")
            {
                
                <div class="form-group">
                    @Html.LabelFor(model => model.items[i].TAP_Tipo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(model => model.items[i].TAP_Tipo, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.items[i].TAP_Tipo, "", new { @class = "text-danger" })
                    </div>
                </div>
            
                <div class="form-group">
                    @Html.LabelFor(model => model.items[i].TAP_Medida, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.items[i].TAP_Medida, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.items[i].TAP_Medida, "", new { @class = "text-danger" })
                    </div>
                </div>
            
                <div class="form-group">
                    @Html.LabelFor(model => model.items[i].TAP_Melamina, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.items[i].TAP_Melamina, new { truevalue = "Sí", falsevalue = "No", nullvalue = "", htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.items[i].TAP_Melamina, "", new { @class = "text-danger" })
                    </div>
                </div>
            
                <div class="form-group">
                    @Html.LabelFor(model => model.items[i].TAP_BOR_Tipo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(model => model.items[i].TAP_BOR_Tipo, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.items[i].TAP_BOR_Tipo, "", new { @class = "text-danger" })
                    </div>
                </div>
            
                <div class="form-group">
                    @Html.LabelFor(model => model.items[i].TAP_BOR_Espesor, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(model => model.items[i].TAP_BOR_Espesor, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.items[i].TAP_BOR_Espesor, "", new { @class = "text-danger" })
                    </div>
                </div>
            
            }

            if (Model.items[i].TipoDeArticulo == "Base")
            {
                
                <div class="form-group">
                    @Html.LabelFor(model => model.items[i].BAS_Modelo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.items[i].BAS_Modelo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.items[i].BAS_Modelo, "", new { @class = "text-danger" })
                    </div>
                </div>
            
                <div class="form-group">
                    @Html.LabelFor(model => model.items[i].BAS_Espesor, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(model => model.items[i].BAS_Espesor, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.items[i].BAS_Espesor, "", new { @class = "text-danger" })
                    </div>
                </div>
            
                <div class="form-group">
                    @Html.LabelFor(model => model.items[i].BAS_Proveedor, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(model => model.items[i].BAS_Proveedor, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.items[i].BAS_Proveedor, "", new { @class = "text-danger" })
                    </div>
                </div>
            
            }
            
            if (Model.items[i].TipoDeArticulo == "Vitrea")
            {
                
                <div class="form-group">
                    @Html.LabelFor(model => model.items[i].VIT_Tipo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.items[i].VIT_Tipo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.items[i].VIT_Tipo, "", new { @class = "text-danger" })
                    </div>
                </div>
            
                <div class="form-group">
                    @Html.LabelFor(model => model.items[i].VIT_Medida, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.items[i].VIT_Medida, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.items[i].VIT_Medida, "", new { @class = "text-danger" })
                    </div>
                </div>
            
                <div class="form-group">
                    @Html.LabelFor(model => model.items[i].VIT_Transparente, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.items[i].VIT_Transparente, new { truevalue = "Sí", falsevalue = "No", nullvalue = "", htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.items[i].VIT_Transparente, "", new { @class = "text-danger" })
                    </div>
                </div>
            
            }
            
            if (Model.items[i].TipoDeArticulo == "FueraDeLista")
            {
                
                <div class="form-group">
                    @Html.LabelFor(model => model.items[i].FUE_Titulo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.items[i].FUE_Titulo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.items[i].FUE_Titulo, "", new { @class = "text-danger" })
                    </div>
                </div>
            
                <div class="form-group">
                    @Html.LabelFor(model => model.items[i].FUE_Detalle, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.items[i].FUE_Detalle, new { cols = 64, rows = 16, @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.items[i].FUE_Detalle, "", new { @class = "text-danger" })
                    </div>
                </div>
            
            }
            
            <div class="form-group">
                @Html.LabelFor(model => model.items[i].Particularidades, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.items[i].Particularidades, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.items[i].Particularidades, "", new { @class = "text-danger" })
                </div>
            </div>
            
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Confirmar" class="btn btn-warning" />
                <a href="@Model.ReturnURL" class="btn btn-default">Cancelar</a>
            </div>
        </div>

    </div>
}

<br />

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/CustomScripts/date-functions.js")
    @Scripts.Render("~/Scripts/CustomScripts/date-validator.js")
}